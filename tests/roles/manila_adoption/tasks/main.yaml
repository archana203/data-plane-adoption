- name: Deploy Podified Manila
  when: manila_backend == "cephfs" or manila_backend == "cephnfs"
  block:
    - name: generate CR config based on the selected backend
      ansible.builtin.template:
        src: manila_cephfs.yaml.j2
        dest: /tmp/manila_cephfs.yaml
        mode: "0600"

    - name: deploy podified Manila with cephfs backend
      ansible.builtin.shell: |
        {{ shell_header }}
        {{ oc_header }}
        oc patch openstackcontrolplane openstack --type=merge --patch-file=/tmp/manila_cephfs.yaml

- name: wait for Manila to start up
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    oc wait pod --for condition=Ready --selector=component=manila-api
    oc wait pod --for condition=Ready --selector=component=manila-scheduler
    oc wait pod --for condition=Ready --selector=component=manila-share
  register: manila_running_result
  until: manila_running_result is success
  retries: 60
  delay: 2

- name: check that Manila is reachable and its endpoints are defined
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    alias openstack="oc exec -t openstackclient -- openstack"

    ${BASH_ALIASES[openstack]} endpoint list | grep -i share
    ${BASH_ALIASES[openstack]} share pool list
  register: manila_responding_result
  until: manila_responding_result is success
  retries: 15

- name: Create default share type
  ansible.builtin.shell: |
    {{ shell_header }}
    {{ oc_header }}
    alias openstack="oc exec -t openstackclient -- openstack"
    ${BASH_ALIASES[openstack]} share type create {{ share_type_name }} {{ driver_handles_share_servers }}
  vars:
    share_type_name: default
    driver_handles_share_servers: false
