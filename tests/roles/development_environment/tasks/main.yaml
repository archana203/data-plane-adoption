- name: pre-launch test VM instance
  no_log: "{{ use_no_log }}"
  when: prelaunch_test_instance|bool
  vars:
    cinder_volume_backend_configured: "{{  cinder_volume_backend in supported_volume_backends }}"
    cinder_backup_backend_configured: "{{  cinder_backup_backend in supported_backup_backends }}"
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      export OPENSTACK_COMMAND="{{ openstack_command }}"
      export CINDER_VOLUME_BACKEND_CONFIGURED={{ cinder_volume_backend_configured | string | lower }}
      export CINDER_BACKUP_BACKEND_CONFIGURED={{ cinder_backup_backend_configured | string | lower }}
      {{ lookup('ansible.builtin.file', prelaunch_test_instance_script) }}

- name: Start and setup ping test
  when:
    - prelaunch_test_instance|bool
    - ping_test|bool
  block:
    - name: Start the ping test to the VM instance.
      vars:
        fip: 192.168.122.20
      ansible.builtin.shell:
        cmd: |
          ping -D {{ fip }} &> {{ ping_test_log_file }} &
    - name: Create stop l3 agent connectivity check scripts.
      ansible.builtin.template:
        src: "stop_ping.sh.j2"
        dest: "{{ stop_ping_script }}"
        mode: "0775"
    - name: Remember that the ping test is running.
      ansible.builtin.set_fact:
        stop_ping_script: "{{ stop_ping_script }}"
        # We need to remember those two when the role's default values
        # are used, ie not set from loaded variable file.
        prelaunch_test_instance: "{{ prelaunch_test_instance }}"
        ping_test: "{{ ping_test }}"

- name: creates Barbican secret
  no_log: "{{ use_no_log }}"
  when: prelaunch_test_instance|bool and prelaunch_barbican_secret|default(false)
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      {{ openstack_command }} secret store --name testSecret --payload 'TestPayload'

- name: saves a fernet token
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      {{ openstack_command }} token issue -f value -c id
  register: before_adoption_token

- name: debug token
  ansible.builtin.debug:
    var: before_adoption_token

- name: create credential for sanity checking its value after adoption
  no_log: "{{ use_no_log }}"
  ansible.builtin.shell:
    cmd: |
      {{ shell_header }}
      {{ openstack_command }} credential create admin test -f value -c id
  register: before_adoption_credential

- name: create resources script
  when: neutron_qe_test | default('false') | bool
  environment:
    OS_CLOUD_IP: "{{ standalone_ip | default(edpm_node_ip) }}"
  block:
    - name: execute create resources script
      ansible.builtin.shell: |
          ssh ${OS_CLOUD_IP} "set -o pipefail && chmod 744 {{ neutron_qe_dir }}/create_resources.sh && \
          {{ neutron_qe_dir }}/create_resources.sh > {{ neutron_qe_dir }}/create_resources.sh.log 2>&1"

    - name: execute prepare-pinger script
      ansible.builtin.shell: |
          ssh ${OS_CLOUD_IP} "set -o pipefail && chmod 744 {{ neutron_qe_dir }}/prepare-pinger.sh && \
          {{ neutron_qe_dir }}/prepare-pinger.sh > {{ neutron_qe_dir }}/prepare-pinger.sh.log 2>&1"

    - name: execute start-pinger script
      ansible.builtin.shell: |
          timeout 20 ssh ${OS_CLOUD_IP} "set -o pipefail && chmod 744 {{ neutron_qe_dir }}/start-pinger.sh && \
          nohup {{ neutron_qe_dir }}/start-pinger.sh > {{ neutron_qe_dir }}/start-pinger.sh.log 2>&1" &
